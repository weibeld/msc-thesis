<?xml version="1.0" ?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 1.0" "http://jpf.sourceforge.net/plugin_1_0.dtd">

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<!-- Plugin adding 'complete' and 'universal' commands to the command line   -->
<!-- inteface of GOAL                                                        -->
<!--                                                                         -->
<!-- complete:  test if an automaton is complete                             -->
<!-- universal: test if an automaton is universal                            -->
<!--                                                                         -->
<!-- Note: requires GOAL version 2014-11-17 or later                         -->
<!--                                                                         -->
<!-- Copyright (c) 2014-2015 Daniel Weibel <daniel.weibel@unifr.ch>          -->
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<plugin id="ch.unifr.goal.util" version="2015.08.07"
        vendor="University of Fribourg, Switzerland (Daniel Weibel [daniel.weibel@unifr.ch])">
  
  <!-- Plugins whose code is accessed by this plugin -->
  <requires>
    <import plugin-id="org.svvrl.goal.core" />
    <import plugin-id="org.svvrl.goal.cmd" />
  </requires>

  <!-- This plugin's code -->
  <runtime>
    <library id="ch.unifr.goal.util" path="classes/" type="code">
      <!-- <export prefix="*" /> --> <!-- If other plugins need to access this plugins's code -->
    </library>
  </runtime>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- Extensions                                                            -->
  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- Add 'complete' command to command line interface -->
  <extension plugin-id="org.svvrl.goal.cmd" point-id="CommandExpression" id="CompleteCommand">
    <parameter id="class" value="ch.unifr.goal.util.CompleteCommand"/>
    <parameter id="name"  value="complete"/>
    <parameter id="help">
      <value>
<![CDATA[ <dl>
<dt>NAME</dt>
  <dd>complete - Test if an automaton is complete.</dd>

<dt>SYNOPSIS</dt>
  <dd>complete FILE_OR_LVAL</dd>

<dt>DESCRIPTION</dt>
  <dd>Write "true" to stdout if the input automaton is complete, and "false"
  otherwise. An automaton is complete if every state has at least one outgoing
  transition for every symbol of the alphabet.</dd>

<dt>EXAMPLE</dt>
  <dd><pre>complete in.gff</pre></dd>
</dl> ]]>
      </value>
    </parameter>
  </extension>

  <!-- Add 'universal' command to command line interface -->
  <extension plugin-id="org.svvrl.goal.cmd" point-id="CommandExpression" id="UniversalCommand">
    <parameter id="class" value="ch.unifr.goal.util.UniversalCommand"/>
    <parameter id="name"  value="universal"/>
    <parameter id="help">
      <value>
<![CDATA[ <dl>
<dt>NAME</dt>
  <dd>universal - Test if an automaton is universal.</dd>

<dt>SYNOPSIS</dt>
  <dd>universal [-m COMPLEMENTATION_ALGORITHM | ARGS_FOR_COMPLEMENTATION_ALGORITHM]
            FILE_OR_LVAL</dd>

<dt>DESCRIPTION</dt>
  <dd>Write "true" to stdout if the automaton is universal. An automaton is
  universal if it accepts all possible words. The test is done by complementing
  the automaton and testing if the complement is empty. By default, the current
  default complementation construction is used, but a different construction
  can be specified with the -m option.</dd>

<dt>EXAMPLE</dt>
  <dd><pre>universal in.gff</pre></dd>
  <dd><pre>universal -m slice in.gff</pre></dd>
  <dd><pre>universal -m slice -p -ro -madj in.gff</pre></dd>
</dl> ]]>
      </value>
    </parameter>
  </extension>

</plugin>