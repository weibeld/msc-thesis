<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

<!--
faxml.xsd version 0.3
-->

<!--
  <states>:
  Lists states in the automaton.
-->
<xs:complexType name="states">
  <xs:sequence>
    <xs:element name="state" type="state" minOccurs="0" maxOccurs="unbounded" />
  </xs:sequence>
</xs:complexType>

<!--
  <state>:
  Describes a state in the automaton. A state has a name and can be an
  accepting or initial state.
-->
<xs:complexType name="state">
  <xs:all>
    <xs:element name="transitions" type="transitions" minOccurs="0" />
  </xs:all>
  <xs:attribute name="name" type="xs:string" />
  <xs:attribute name="accepting" type="xs:boolean" />
  <xs:attribute name="initial" type="xs:boolean" />
</xs:complexType>

<!--
  <transitions>:
  Lists transitions of states.
-->
<xs:complexType name="transitions">
  <xs:sequence>
    <xs:element name="transition" type="transition" minOccurs="0" maxOccurs="unbounded" />
  </xs:sequence>
</xs:complexType>

<!--
  <transition>:
  Describes a transition between two states. The symbols resulting to the
  transition are represented by a string where each letter represents a symbol.
  The attribute TO is used to indicate the name of the resulting state.
-->
<xs:complexType name="transition">
  <xs:attribute name="to" type="xs:string" use="required"/>
  <xs:attribute name="label" type="xs:string" use="required" />
</xs:complexType>

<!--
  <automaton>:
  Describes the structure of an automaton. It requires two elements: its 
  alphabet (symbols) and its structure (states, transitions). The attributes
  are the name of the automaton and the type of the automaton. If no type is
  given, a normal finite automaton is assumed.
-->
<xs:complexType name="automaton">
  <xs:sequence>
	 <xs:element name="alphabet" type="xs:string" />
	 <xs:element name="states" type="states" />
  </xs:sequence>
  <xs:attribute name="class" type="automaton_class" />
  <xs:attribute name="minimal" type="xs:boolean" />
  <xs:attribute name="name" type="xs:string" />
  <xs:attribute name="type" type="automaton_type" />
</xs:complexType>

<!--
  automaton_class:
  Describes the type of class of the automaton. Can be either deterministic,
  non-deterministic or epsilon-non-deterministic.
-->
<xs:simpleType name="automaton_class">
  <xs:restriction base="xs:string">
	 <xs:enumeration value="deterministic" />
	 <xs:enumeration value="non-deterministic" />
	 <xs:enumeration value="epsilon-non-deterministic" />
  </xs:restriction>
</xs:simpleType>

<!--
  automaton_type:
  Describes the type of the automaton. Can be either normal or BÃ¼chi.
-->
<xs:simpleType name="automaton_type">
  <xs:restriction base="xs:string">
	 <xs:enumeration value="normal" />
	 <xs:enumeration value="buechi" />
  </xs:restriction>
</xs:simpleType>

<!--
  <faxml>: 
  The document root. Contains global informations about the finite automaton.
-->
<xs:complexType name="faxml">
  <xs:sequence maxOccurs="unbounded">
    <xs:choice>
      <xs:element name="regexp" type="xs:string" />
      <xs:element name="automaton" type="automaton" />
    </xs:choice>
  </xs:sequence>
  <xs:attribute name="version" type="xs:string" use="required" />
</xs:complexType>

<xs:element name="faxml" type="faxml" />

</xs:schema>
