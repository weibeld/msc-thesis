EFA_0.0.0 {
    global:
      algorithm_functions;
      algorithm_names;
      algorithm_type_names;
      automaton_class_names;
      automaton_type_names;
      boltzmann_samplers;
      brzozowski;
      buechi_hash_build_set_list;
      buechi_hash_create_insert_tuple;
      buechi_hash_create_tuple;
      buechi_hash_create_tuple_label;
      buechi_hash_mod_sub_const;
      buechi_hash_subset_splitting;
      buechi_hash_tuple_const;
      buechi_hash_unifr;
      buechi_rbtree_build_set_list;
      buechi_rbtree_create_insert_tuple;
      buechi_rbtree_create_tuple;
      buechi_rbtree_create_tuple_label;
      buechi_rbtree_mod_sub_const;
      buechi_rbtree_subset_splitting;
      buechi_rbtree_tuple_const;
      buechi_rbtree_unifr;
      buechi_tuple_hash_to_state_hash;
      data_type_names;
      efa_alloc;
      efa_dt_io;
      efa_errno;
      efa_error;
      efa_free;
      efa_module_names;
      efa_parse_opts;
      efa_realloc;
      emsg_name;
      fa_collect;
      fa_complement;
      fa_complete;
      fa_equivalence;
      fa_hash_copy_sos;
      fa_hash_create_insert_sos;
      fa_hash_create_sos;
      fa_hash_create_sos_label;
      fa_hash_nfa_move;
      fa_minimize;
      fa_minimization_algorithm;
      fa_rbtree_copy_sos;
      fa_rbtree_create_insert_sos;
      fa_rbtree_create_sos;
      fa_rbtree_create_sos_label;
      fa_rbtree_nfa_move;
      fadot_hash_write;
      fadot_rbtree_write;
      faxml_faxml_attributes;
      faxml_node_names;
      faxml_validate_parse;
      faxml_validate_parse_debug;
      file_extension_names;
      hash_alloc_insert;
      hash_delete;
      hash_delete_free_sos;
      hash_delete_free_state;
      hash_free_sos;
      hash_free_state;
      hash_free_nodes_sos;
      hash_free_nodes_state;
      hash_function_names;
      hash_functions;
      hash_init;
      hash_insert;
      hash_io;
      hash_lookup;
      hash_scan_begin;
      hash_scan_delfree_sos;
      hash_scan_delfree_state;
      hash_scan_next;
      hash_set_function;
      hash_verify;
      hnode_destroy;
      hnode_rehash;
      hopcroft;
      rbtree_io;
      regexp_hash_read;
      regexp_rbtree_read;
      regexp_hash_write;
      regexp_rbtree_write;
      recursive_method;
      subset_construction;
      verbosity_level_names;
    local: *;
};
