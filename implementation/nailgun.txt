Links with examples/tutorials:
https://wiki.duraspace.org/display/DSPACE/Nailgun
http://java.dzone.com/articles/boost-your-groovy-nailgun


Heroku Buildpack Nailgun
-----------------------------------------------------------------------------
git clone https://github.com/martylamb/nailgun
cd nailgun

mkdir /app/vendor/nailgun
mkdir /app/vendor/nailgun/bin

# Build and install server
mvn clean install
cp nailgun-server/target/nailgun-server-0.9.2-SNAPSHOT.jar /app/vendor/nailgun

# Build and install client
make ng
cp ng /app/vendor/nailgun/bin

# Don't need this directory anymore
cd ..
rm -rf nailgun

# Add /app/vendor/nailgun/bin to PATH
mkdir -p .profile.d
echo "PATH=\$HOME/vendor/nailgun/bin:\$PATH" > .profile.d/grapvhiz.sh
-----------------------------------------------------------------------------



Start a JVM customised the way we need it for executing GOAL (information from $GOAL_LOC/goal), and make it run the Nailgun server
-----------------------------------------------------------------------------
goal_loc = `dirname $(which goal)`		# /app/vendor/goal
nailgun_loc = `dirname $(dirname $(which ng))`  # /app/vendor/nailgun
# From anywhere:
`java \
-DapplicationRoot="$GOAL" \
-Dorg.java.plugin.boot.pluginsRepositories="$GOAL/plugins" \
-Djpf.boot.config="$GOAL/boot.properties" \
-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.SimpleLog \
-Dorg.apache.commons.logging.simplelog.log.org.java.plugin=fatal \
-classpath $NAILGUN/nailgun-server-0.9.2-SNAPSHOT.jar:$GOAL/lib/jpf-boot.jar \
com.martiansoftware.nailgun.NGServer &
# com.martiansoftware.nailgun.NGServer is the main class of the JAR file
# nailgun-server-0.9.2-SNAPSHOT.jar. This class is found because we add the
# JAR file to the classpath.

# ---> Place server launching in a .profile.d script during bulid. Problem:
# order of execution of .profile.d script is arbitrary, so 'goal' might not
# yet be in the PATH.
-----------------------------------------------------------------------------



Execute a GOAL command via the Nailgun client (ng)
-----------------------------------------------------------------------------
# From anywhere:
`ng org.java.plugin.boot.Boot generate -A classical`
# The usual way to launch GOAL is
# 	java <vars> -jar $GOAL_LOC/lib/jpf-boot.jar generate
# This is the same as
# 	java <vars> org.java.plugin.boot.Boot generate
# if $GOAL_LOC/lib/jpf-boot.jar is in the classpath, and because
# org.java.plugin.boot.Boot is the main class of the jpf-boot.jar.
# We have set all the required vars and the jpf-boot.jar classpath when we
# launched the JVM for the Nailgun server. So, it's all ready, and we can
# just execute ng org.java.plugin.boot.Boot generate.
-----------------------------------------------------------------------------



Check whether a Nailgun server is already running
-----------------------------------------------------------------------------
if `ps -ef | grep "nailgu[n]"` != ""
	# A Nailgun server is already running
else
	# No Nailgun server is running
end
# ---> Do Nailgun server launching in .profile.d script.
-----------------------------------------------------------------------------