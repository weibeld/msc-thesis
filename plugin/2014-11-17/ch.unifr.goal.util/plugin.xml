<?xml version="1.0" ?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 1.0" "http://jpf.sourceforge.net/plugin_1_0.dtd">

<plugin id="ch.unifr.goal.util" version="0.0.1">
  
  <!-- The plugins whose code is accessed by this plugin -->
  <requires>
    <import plugin-id="org.svvrl.goal.core" />
    <import plugin-id="org.svvrl.goal.cmd" />
  </requires>


  <!-- The location of the code of this plugin -->
  <runtime>
    <library id="ch.unifr.goal.util" path="classes/" type="code">
      <!-- <export prefix="*" /> --> <!-- If other plugins need to access code of this plugin -->
    </library>
  </runtime>

  <!-- Command line command for testing if an automaton is complete -->
  <extension plugin-id="org.svvrl.goal.cmd" point-id="CommandExpression" id="CompleteCommand">
    <parameter id="class" value="ch.unifr.goal.util.CompleteCommand"/>
    <parameter id="name" value="complete"/>
    <parameter id="help">
      <value>
<![CDATA[ <dl>
<dt>NAME</dt>
  <dd>complete - Test if an automaton is complete.</dd>

<dt>SYNOPSIS</dt>
  <dd>complete FILE_OR_LVAL</dd>

<dt>DESCRIPTION</dt>
  <dd>Return "true" if the input automaton is complete, and "false" otherwise.
  An automaton is complete if every state has at least one outgoing transition
  for every symbol of the alphabet.</dd>

<dt>EXAMPLE</dt>
  <dd><pre>complete aut.gff</pre></dd>
</dl> ]]>
    </value>
  </parameter>
</extension>

<!-- Command line command for testing if an automaton is universal -->
  <extension plugin-id="org.svvrl.goal.cmd" point-id="CommandExpression" id="UniversalCommand">
    <parameter id="class" value="ch.unifr.goal.util.UniversalCommand"/>
    <parameter id="name" value="universal"/>
    <parameter id="help">
      <value>
<![CDATA[ <dl>
<dt>NAME</dt>
  <dd>universal - Test if an automaton is universal.</dd>

<dt>SYNOPSIS</dt>
  <dd>complete FILE_OR_LVAL</dd>

<dt>DESCRIPTION</dt>
  <dd>Return "true" if the input automaton is complete, and "false" otherwise.
  An automaton is complete if every state has at least one outgoing transition
  for every symbol of the alphabet.</dd>

<dt>EXAMPLE</dt>
  <dd><pre>complete aut.gff</pre></dd>
</dl> ]]>
    </value>
  </parameter>
</extension>

</plugin>