Slide 2
=======

This is the outline of my presentation. In the first part, I will introduce the study. In the second part, I will present the implementation of a Büchi complementation that was part of this project. This includes a short demonstration of this implementation. In the third part, I will present the setup of the empirical study that I executed. In the last, and biggest part, I will present the results of this study.

Slide 3
=======

Let's start with some very basic concepts. This thesis is about an operation on a certain type of automa, which are called Büchi automata. Büchi automata are basically finite state automata, like the ordinary finite state automata. The difference is that Büchi automata run on infinite words, so called omega-words. Like for ordinary automata, a word is accepted if it has an accepting run. A run is a sequence of states that are visited in the course of reading the word. In Büchi automata, a run is accepting if it contains infinitely many occurrences of an accepting state.

<overlay>

This thesis is about a specific operation on Büchi automata, and this operation is complementation. Like for ordinary automata, the complement of a Büchi automaton A is another Büchi automaton B that accepts a word if and only if it is not accepted by A.

Slide 4
=======

The property that makes Büchi complementation an active research topic is its complexity, in particular its state complexity. Generally, a Büchi complementation construction takes as input a Büchi automaton A with n states, and outputs the complement B of A with m states. The state complexity is the number of states of the complement in relation to the number of states of the input automaton. Other names for the state complexity are ...

<overlay>

As "staet explosion already indicates, the state complexity can be very high for Büchi complemenation, which means basically that the complements may become very large. This is actually the biggest problem of Büchi complementation, which inhibits its practical application, e.g. in automata-theoretic model checking.

<overlay>

The state complexity is so important that it defines the performance of a complementation construction. Generally, the lower the state complexity, the higher we say that the performance of this construction is. Consequently, it is important to investigate the state complexity of complementation constructions.


Slide 5
=======

One way to analyse the state complexity of a construction, which is not the way we are using in our study (our approach is presented on the next slide), is to determine its so-called worst-case state complexity. Every construction has a specific worst-case state complexity, and it means basically the maximum number of states that a construction can generate. (For example, if you recall the suset construction for determinising non-deterministic finite state automata, it can produce at most 2^n states, because there are 2^n subsets of states of the input automaton.) The worst-case state complexity can also be seen as the complement size of a theoretical worst-case automaton.

<overlay>

These worst-case state complexities are calculatd for almost all constructions that are proposed. Here are some exampoles. ...

<overlay>

Furthermore, these worst-case state complexities are often used to assess the overall performance of efficiency of a construction. That is, the performance of a construction on a theoretical worst case is generalised to the performance of the construction in general. That means, for example, Schewe's construction would be seen as better than Vardi and Wilke's construction, and so on.


Reults
======

Slide 23
--------

First test scenario: IG

Slide 24
--------

- As mentioned, analysis is based only on the effective samples (10,939)
- Here we see the mean and median complement sizes of these 10939 eff. samples
- Mean is higher than median $\rightarrow$ right-skewed (positive-skewed, right-tailed)
- Constructions from left to right:
    - Fribourg: median ca. 750 states, mean ca. 2000 states
    - Fribourg+R2C: mean and median decrease (9% complete automata)
    - Fribourg+R2C+C: mean increases, median decreases
    - Fribourg+M1: mean decreases significantly
    - Fribourg+M1+M2: no improvement
    - Friboug+M1+R2C: small improvement (compared to Fribourg+M1)
    - Fribourg+M1+R2C+C: same picture, mean up, median down
    - Fribourg+R: very small automata (61.8% universal automata)

Slide 25
--------

- Median complement size for each of the 110 dt/da classes
- Each class contains 100 automata
- Show acceptance and transition densities on x and y-axis
- Distribution very uneven, transition densities between 1.2 and 2.0 have higher medians
- Peak at (1.6, 0.3)
- Medians decreasing with increasing acceptance density
- Fribourg+R2C+C: high areas higher, low areas lower

Slide 26
--------

- Remaining versions
- First three plots: effect of M1 optimisation (switch slide back and forth)

Slide 27
--------

Second test scenario: IM

Slide 28
--------

- Plot of the complement sizes of the four Michel automata for each construction
- Significant difference between Michel 1--3 and Michel 4
- Complements of Michel 4 very large (50,000 and more) for an automaton with 6 states
- Results of Michel 4 are most informative
- R2C and M1 have large impact
- M2 has positive impact (unlike for the GOAL test set)

Slide 29
--------

- Plot of execution times for the four Michel automata
- Difference between Michel 1--3 and Michel 4 even more significant
- But also differences between constructions more significant
- Times:
    - Fribourg: 100,976 sec, 28 hours
    - Fribourg+R2C: 27,938 sec, 7.75 hours
    - Fribourg+M1: 6,508 sec, 1 hour 50 min
    - Fribourg+M1+M2: 2,707 sec, 45 min
    - Fribourg+M1+M2+R2C: 2,332 sec, 40 min
    - Fribourg+R: like Fribourg

Slide 30
--------

Third test scenario: EG

Slide 31
--------

- Only 7,204 effective samples
- Mean for Rank extremely high
    - But median of Rank similar to other constructions
    - Rank has some very big complements
- Piterman clear winner
- Fribourg and Slice similar, but Slice slightly better
- Almost all of the excluded automata are provoked by Rank
- Therefore, another analysis by excluding Rank


Slide 32
--------

- Without Rank, 10,998 effective samples (only to aborted automata)
- Similar picture as before
    - Piterman clear winner
    - Fribourg and Slice similar, but Slice slightly better

Slide 33
--------

- Median complement sizes for each of the 110 dt/da classes
- Based on the 10,998 eff. samples without Rank
    - With Rank, there would be many "empty" classes, thus per-class analysis is less useful
- Other constructions show a similar pattern as the Fribourg construction
    - The same automata are hard or easy for all constructions

Slide 
--------

Fourth test scenario: EM

Slide
--------

- Plot of complement sizes of the four Michel automata for each construction
- Regarding Michel 4: reverse of EG
- Piterman worst, and Rank best
- Fribourg better than Slice
- However, Piterman still better than Fribourg (without opt.) in IM (287,907)

Slide
--------

- Plot of execution times for the four Michel automata for each construction
- Differences between constructions even more pronounced
- Times:
    - Piterman: 75,917 sec, 21 hours
    - Slice: 159 sec. 2 min 40 sec
    - Fribourg: 2,332 sec, 39 min
    - Rank: 30 sec
- Complement of Fribourg is smaller than complement of Slice, but exec. time of Fribourg is considerably higher
- Piterman still faster than Fribourg in IM (around 100,976 sec)


Slide
--------

- Regarding performance of Fribourg construction
    - R2C large impact (can be seen in IM)
    - M1 large impact
    - M2 no improvement for GOAL test set, but remarkable improvement for Michel test set
    - R2C+C: makes hard automata harder and easy automata easier
    - Fribourg can compete with Slice, not with Piterman, and is much better than Rank
- Regarding Büchi complementation in general
    - Worst-case complexities do not reflect actual performance
        - E.g. Rank has best worst-case complexity, Piterman has worst
        - Fribourg+M1+M2 has better worst-case complexity than Fribourg+M1
        - Actual performance is much more multifaceted
    - Surprising behaviour
        - Piterman very good on GOAL test set, but very bad on Michel test set
        - Rank very bad on GOAL test set, but very good on Michel test set
    - No overall best construction
        - All constructions have individual strenghts and weaknesses
- Future work
    - More profound statistical analysis


