- Complementation algorithm option passing as variables: does it work in the new version of GOAL? -> No, it's the same
- Update to new version of GOAL on Mac -> Done
- Report bug in new GOAL version (2014-08-08): the Ctr-C (or Cmd-C on Mac) shortcut for complementation does not work -> Done
- Asking for ControllableTab output panel: rank and slice do it right. With all the other algorithms, the panel grows as well. -> Done
- Asking for GOAL batch complementation algorithm options -> Done
- Script for transferring files and folders between local machine and cluster -> Done
- RSA authentication on cluster (for login without entering password) -> Done
- Cluster submit options and folder structure -> Done
- Rename test automata files -> Done
- Script for complementing the 11'000 test automata and reporting generated number of states, used real time, and used CPU time -> Done
- complement.sh: use default time command (not GNU time) because it has a higher precision (1/1000 sec.) and GNU time which has only 1/100 sec. precision seems to just truncate the least significant digit (instead of rounding) -> Done
- complement.sh: set values for t_out and m_out to Y and N -> Done
- complement.sh: add columns for transition density and acceptance density -> Done
- complement.sh: show user_cpu and sys_cpu in two separate columns -> Done
- complement.sh: use local scratch (for automata and tmp file) -> Done
- submit.sh: add -V as standard argument to qsub so that the PATH is available on the cluster nodes (path to home directory is the same on cluster nodes) -> Done
- submit.sh: add option for parallel environment SMP (request 2 or 3 slots for GOAL complementation) -> Done
- submit.sh: add scratch as default (or option) -> Done
- submit.sh: save issued qsub command in file -> Done

23.09.2014
- submit.sh: allow arguments to job script -> Done
- complement.sh: take algorithm and algorithm options as arguments -> Done
- Set up only one global complement.sh that is referenced from the individual jobs. Algoritm and options are passed to complement.sh as arguments -> Done
- Copy GOAL folder to scratch. There are errors when multiple jobs try to access it in the global home directory -> Done
- Maintain zipped versions of all the data that has to be moved to the local scratch by every job -> Done

24.09.2014
- complement.sh: better logging -> Done
- complement.sh: add job name to out and log file -> Done
- complement.sh: make "data" a command line argument -> Done
- Change back to the 2013-07-11 version of GOAL. The reason is that in the newest version (2014-08-08) invalid complementation algorithm options are ignored instead of reported. In the 2013-07-11 version, on the other hand, GOAL aborts with the message "Unknown argument -x". -> Done
- complement.sh: detect unknown complementation algorithms and options. Abort job in that case. -> Done

- complement.sh: improve definition and writing out of columns
- R package with functions for reading and analysing result data
- Algorithm implementation: add the -r option for removing unreachable and dead states. A state can be removed (because it is unreachable or dead) if: (1) it is not reachable form the initial state, (2) it cannot reach an accepting state.